#!/usr/bin/env ruby

require "aws-sdk"

@profile = '.bissell-id-dev'

@action_curl = ENV['ACTION_CURL'] || 'curl'

pr_number, action, *args = ARGV

pr_number =~ /(\d+)/
pr_number = $1

raise "must specify PR number" unless pr_number

Aws.config.update(
  region: "us-east-1",
  credentials: Aws::SharedCredentials.new(profile_name: "cdf_dev")
)

apiGateway = Aws::APIGateway::Client.new(
  region: "us-east-1"
)
apis = apiGateway.get_rest_apis(limit: 500)

api_name = "bissell-mobile-api-PR-#{pr_number}-MobileApiLambdas-"

api = apis.items.find { |a| a.name.start_with? api_name }

unless api
  raise "couldn't find an API whose name starts with #{api_name}:\n#{apis}"
end

@base_url = "https://#{api.id}.execute-api.us-east-1.amazonaws.com/prod"

def curl_args(path, auth, *args)
  if auth
    args.unshift "-H", "Authorization: Bearer #{auth}"
  end

  ['-H', "Content-Type: application/vnd.aws-cdf-v1.0+json", *args, "#{URI.join @base_url, "/prod" + path}"]
end

auth_args = curl_args "/tokens", nil, "-s", "-d", "@#{Pathname.new(ENV['HOME']).join @profile}"

token_response = IO.popen ['curl', *auth_args] do |io| 
  io.read
end

token = JSON.parse(token_response)['access_token']

unless token
  puts "auth failed:\n  #{token_response}"
  exit -1
end

action_args = curl_args action, token, *args

exec @action_curl, *action_args

# const aws = require("aws-sdk");
# const _ = require("lodash");

# const prNumber = _.chain(process.argv[2]).toLower().trimStart("prPR-_").value();
# console.log("pr number", prNumber);

# const creds = new aws.SharedIniFileCredentials({ profile: "cdf_dev" });
# aws.config.update({ region: "us-east-1", credentials: creds });

# const gateway = new aws.APIGateway({ apiVersion: "2015-07-09" });

# (async () => {
#   const apis = (await gateway.getRestApis({ limit: 500 }).promise()).items;
#   const prApi = _.find(apis, a => a.name.startsWith(`bissell-mobile-api-PR-${prNumber}-MobileApiLambdas-`));
#   console.log("pr api", prApi);
# })();

# require 'pathname'
# require 'json'
#
# pr, action, *args = ARGV
#
# @profile = '.bissell-id-dev'
#
# @action_curl = ENV['ACTION_CURL'] || 'curl'
#
# @base_url = "https://t51zpt0nx6.execute-api.us-east-1.amazonaws.com/prod"
#
#
# auth_args = curl_args "/tokens", nil, "-s", "-d", "@#{Pathname.new(ENV['HOME']).join @profile}"
#
# token_response = IO.popen ['curl', *auth_args] do |io| 
#   io.read
# end
#
# token = JSON.parse(token_response)['access_token']
#
# unless token
#   puts "auth failed:\n  #{token_response}"
#   exit -1
# end
#
# action_args = curl_args action, token, *args
#
# # action_response = IO.popen ['curl', *action_args] do |io| 
# #   io.read
# # end
#
# exec @action_curl, *action_args