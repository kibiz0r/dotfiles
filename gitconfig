[user]
  name = Michael Harrington
  email = kibiz0r@gmail.com
[alias]
  current-branch = !"git branch | grep '*' | sed 's/* //'"
  curb = current-branch
  shwifty = !git-shwifty
  twirl = !git stash && git pull && git stash pop
  on = "!git checkout -B \"$1\"; git config branch.\"$1\".remote origin; git config branch.\"$1\".merge \"refs/heads/$1\"; echo \"Got on $1\" #"
  cia = commit --amend
  b = branch
  ba = branch -a
  # These need to check if local branch matches $1 first, and only `checkout -` if necessary
  # It would also be nice to default $1 to the current branch
  # bd = !"git checkout -; git branch -d \"$1\""
  # bdr = !"git checkout -; git branch -d \"$1\" && git push origin --delete \"$1\""
  bd = !"git branch -d \"$1\""
  bdr = !"git branch -d \"$1\" && git push origin --delete \"$1\""
  ci = commit
  co = checkout
  st = status
  su = submodule update --init --recursive
  diffc = diff --cached
  dc = diffc
  cleanall = "!git clean -fdx && git submodule foreach --recursive git clean -fdx"
  rbi = rebase --interactive
  rbc = rebase --continue
  rbs = rebase --skip
  rba = rebase --abort
  pull-reset = !git fetch && git reset --hard FETCH_HEAD
  sa = submodule add
  url = remote get-url --all origin
  urls = !"git remote get-url --all origin && git submodule foreach --recursive git remote get-url --all origin"
  pullr = pull --rebase
  out = merge --abort
  gud = git reset --hard HEAD
  ma = merge --abort
  submodules = submodule foreach --recursive git status
  bruh = branch -vv
  logp = log --graph --decorate
  loga = log --graph --decorate --all
  logs = log --graph --decorate --all --max-count=16
  highlight-head = !"sed \"s/\\([\\(]HEAD[^\\)]*[\\)]\\)/`git config --get-color '' reverse`\\\\1`git config --get-color '' reset`/\" | less"
  lga = !"git lga1"
  lga1 = !"git lg1-specific --all --color | git highlight-head"
  lga2 = !"git lg2-specific --all --color | git highlight-head"
  lga3 = !"git lg3-specific --all --color | git highlight-head"
  lg = !"git lg1"
  lg1 = !"git lg1-specific --color | git highlight-head"
  lg2 = !"git lg2-specific --color | git highlight-head"
  lg3 = !"git lg3-specific --color | git highlight-head"
  lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
  lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
  lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
[color]
  ui = true
[color "branch"]
  upstream = dim white
  current = yellow
  remote = dim white
[core]
  excludesfile = /Users/harrinm/.gitignore_global
  autocrlf = input
  mergeoptions = --no-edit
[difftool "pldiff"]
  cmd = pldiff $LOCAL $REMOTE
[diff]
  tool = pldiff
[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
[pager]
	branch = false
[url "git@github.com:"]
	insteadOf = git://github.com/
