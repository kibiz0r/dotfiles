[user]
  name = Michael Harrington
  email = kibiz0r@gmail.com
[alias]
  rekt = push -f
  remote-tag = !"git tag $1 && git push origin $1 #"
  sho = log -p
  sha = rev-parse --short HEAD
  tags = !"git tag | cat"
  au = add -u
  delete-gone = !"git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -d"
  branch-name = !"git branch --all | grep"
  bn = branch-name
  showr = !"git log -p --full-diff \"$(echo \"$1\" | perl -pe 's/(\\w+)\\.\\./$1^../')\" $2 $3 $4 $5 $6 $7 $8 $9 #"
  showrstat = !"git log --stat -m --full-history \"$(echo \"$1\" | perl -pe 's/(\\w+)\\.\\./$1^../')\" $2 $3 $4 $5 $6 $7 $8 $9 #"
  cherry-pit = !"git rebase -p --onto $1^ $1 #"
  cpc = cherry-pick --continue
  cpa = cherry-pick --abort
  there = !"git fetch && git reset --hard @{upstream}"
  prs-since-plat = !"git log --format='%C(white)%s%C(reset) %C(dim white)- %an%C(reset)' $1..origin/main --grep='^Merged PR' #"
  prs-since-plat1 = !"git log --format='%C(bold blue)%h%C(reset) %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' $1..origin/main --grep='^Merged PR' #"
  prs-since-mobile = !"git log --format='%C(white)%s%C(reset) %C(dim white)- %an%C(reset)' $1..origin/main --grep='^Merged PR' #"
  prs-since-mobile1 = !"git log --format='%C(bold blue)%h%C(reset) %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' $1..origin/main --grep='^Merged PR' #"
  prs-between = !"git log --format='%C(white)%s%C(reset) %C(dim white)- %an%C(reset)' $1..$2 --grep='^Merged PR' #"
  prs-between1 = !"git log --format='%C(bold blue)%h%C(reset) %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' origin/$1..origin/$2 --grep='^Merged PR' #"
  it = reset --hard @{upstream}
  rename = branch -m
  remerge = checkout -m
  fixed = !"FIXED=$(git status --porcelain | grep \"^\\w\\{2\\}\" | sed \"s/[[:alpha:]][[:alpha:]] //\" | head -n1); if [[ -n $FIXED ]]; then echo git add \"$FIXED\"; git add \"$FIXED\"; fi; NEXT=$(git status --porcelain | grep \"^\\w\\{2\\}\" | sed \"s/[[:alpha:]][[:alpha:]] //\" | head -n1); if [[ -n $NEXT ]]; then echo Next is \"$NEXT\"; else echo 'All done!'; fi"
  to-fix = !"NEXT=$(git status --porcelain | grep \"^\\w\\{2\\}\" | sed \"s/[[:alpha:]][[:alpha:]] //\" | head -n1); if [[ -n $NEXT ]]; then echo Next is \"$NEXT\"; else echo 'All done!'; fi"
  current = checkout --ours .
  some = add -p
  away = checkout -p
  less = reset -p
  since = diff --stat
  uh = !"git config --global --get alias.$@ #"
  wut = !"git config --global --get alias.$@ #"
  what = !"git config --global --get alias.$@ #"
  wtf = !"git config --global --get alias.$@ #"
  issues = issue
  remotes = remote -v
  a = add
  df = diff --ws-error-highlight=all
  d = df
  forked-by = !"git remote set-url origin `git remote get-url origin | sed \"s/:[^/]*/:$1/\"` # git forked-by kibiz0r"
  current-branch = !"git branch | grep '*' | sed 's/* //'"
  curb = current-branch
  shwifty = !git-shwifty
  twirl = !git stash && git pull && git stash pop
  up = !"git pull --ff-only && git submodule update --init --recursive"
  upr = pull --rebase
  cfg = !"/usr/local/bin/mvim $HOME/.gitconfig 2> /dev/null"
  on = !"if [[ \"$1\" == it ]]; then git fetch && git rebase origin/main; else ON_BRANCH=\"$(echo \"$@\" | tr '[:upper:]' '[:lower:]' | perl -pe \"s/'//g; s/[^\\w\\/\\.]/-/g; s/--*/-/g; s/-\\././g; s/[-\\.]+$//\")\"; git checkout -b \"$ON_BRANCH\"; git config branch.\"$ON_BRANCH\".remote origin; git config branch.\"$ON_BRANCH\".merge \"refs/heads/$ON_BRANCH\"; echo \"Got on $ON_BRANCH\"; fi #"
  on-it = on it
  with = !"if [[ \"$1\" == it ]]; then git fetch && git merge \"origin/main\"; else git cherry-pick \"$1\"; fi #"
  with-it = with it
  amend = commit --amend
  amen = commit --amend
  b = branch
  ba = branch -a
  bd = branch -d
  bdr = !"git branch -d \"$1\" 2> /dev/null; git push origin --delete \"$1\" #"
  ci = commit
  co = checkout
  st = status
  su = submodule update --init --recursive
  diffc = diff --cached --ws-error-highlight=all
  dc = diffc
  cleanall = !"git clean -fdx && git submodule foreach --recursive git clean -fdx"
  rbi = rebase --interactive
  rbc = rebase --continue
  rbs = rebase --skip
  rba = rebase --abort
  rvc = revert --continue
  pull-reset = !git fetch && git reset --hard FETCH_HEAD
  sa = submodule add
  url = remote get-url --all origin
  urls = !"git remote get-url --all origin && git submodule foreach --recursive git remote get-url --all origin"
  pullr = pull --rebase
  out = !"git merge --abort 2> /dev/null || git rebase --abort 2> /dev/null #"
  re = reset --hard
  to = reset --hard
  gud = !"git reset --hard HEAD && git clean -dfx"
  ma = merge --abort
  submodules = submodule foreach --recursive git status
  bruh = branch -vv
  logh = !"git log --color \"$@\" | sed \"s/\\([\\(]HEAD[^\\)]*[\\)]\\)/`git config --get-color '' reverse`\\\\1`git config --get-color '' reset`/\" | less #"
  logp = logh --graph --decorate
  loga = logh --graph --decorate --all
  logs = logh --graph --decorate --all --max-count=16
  logf = !"git logh --graph --abbrev-commit --decorate --color --format=format:\"$@\" #"
  lga = "lg1 --all"
  lga1 = "lg1 --all"
  lga2 = "lg2 --all"
  lga3 = "lg3 --all"
  lg = "lg1"
  lg1 = !"git logf '%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' $@ #"
  lg2 = !"git logf '%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' $@ #"
  lg3 = !"git logf '%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)' $@ #"
  imgdiff = 
	rec = revert --continue
	res = revert --skip
	yoda = push --force
[color]
  ui = true
[color "branch"]
  upstream = dim white
  current = yellow
  remote = dim white
[core]
  excludesfile = ~/.gitignore_global
  autocrlf = input
  pager = diff-so-fancy | tabless
	attributesfile = ~/.gitattributes
[blame]
  ignorerevsfile=.git-blame-ignore-revs
[difftool "pldiff"]
  cmd = pldiff $LOCAL $REMOTE
[diff]
  tool = pldiff
[filter "lfs"]
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
  clean = git-lfs clean -- %f
[pager]
  branch = false
[url "git@github.com:"]
  insteadOf = git://github.com/
[stash]
  showPatch = true
[color "diff-highlight"]
  oldNormal = red
  oldHighlight = red reverse
  newNormal = green
  newHighlight = green reverse
[color "diff"]
  meta = yellow
  frag = magenta bold
  commit = yellow bold
  whitespace = red reverse
[diff-so-fancy]
  markEmptyLines = false
  stripLeadingSymbols = false
# [diff "image"]
# 	textconv = imgcat
# 	command = imgdiff
